---

Parameters:
  CidrValue: 
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    Description: VPC CIDR Range

  PublicS:
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    Description: VPC public subnet

  PrivateS:
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    Description: VPC private subnet

Resources:
  VPC: 
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref CidrValue
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags: 
        - Key: Test
          Value: !Sub "${AWS::StackName}-myvpc"

  PriSubnet: 
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateS
      AvailabilityZone: !Select 
          - '0' 
          - !GetAZs
            Ref: 'AWS::Region'
      Tags: 
        - Key: Subnet
          Value: Private

  PubSubnet: 
    Type: AWS::EC2::Subnet
    Properties: 
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicS
      AvailabilityZone: !Select 
          - '1' 
          - !GetAZs
            Ref: 'AWS::Region'
      Tags: 
        - Key: Subnet
          Value: Public

  PrimyRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Route
        Value: Private

  PubmyRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Route
        Value: Public

  PriSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PriSubnet
      RouteTableId: !Ref PrimyRouteTable

  PubSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PubSubnet
      RouteTableId: !Ref PubmyRouteTable
 
  InternetGateway:
    Type: AWS::EC2::InternetGateway

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PubRoute:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref PubmyRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId: !Ref InternetGateway

  NAT:
    Type: AWS::EC2::NatGateway
    Properties:
       AllocationId:
          Fn::GetAtt:
          - EIP
          - AllocationId
       SubnetId: !Ref PriSubnet

  EIP:
    Type: AWS::EC2::EIP
    DependsOn: PriSubnet
    Properties:
      Domain: vpc

  PriRoute:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref PrimyRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       NatGatewayId: !Ref NAT

Outputs: 
  PublicSubnetID:
    Description: Subnet for Public
    Value: !Ref PubSubnet
    Export: 
      Name: PublicSubnet
 
  PrivateSubnetID:  
    Description: Subnet for Private
    Value: !Ref PriSubnet 
    Export: 
      Name: PrivateSubnet

  vpcid:
    Description: vpcid
    Value: !Ref VPC
    Export: 
      Name: vpcid 
